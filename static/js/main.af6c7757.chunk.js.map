{"version":3,"sources":["components/FilterableProductTable.js","App.js","index.js"],"names":["TopBar","props","className","type","placeholder","value","filterText","onChange","e","onFilterTextChange","target","id","checked","inStockOnly","onInStockOnlyChange","htmlFor","ProductTable","handleDeleteClick","onDeleteClick","currentTarget","dataset","index","products","filter","product","capsName","name","toUpperCase","capsFilterText","indexOf","stocked","map","key","classNames","warn","data-id","data-index","onClick","brand","category","price","FilterableProductTable","state","error","isLoaded","handleFilterTextChange","bind","handleInStockOnlyChange","url","this","setState","targetId","targetIndex","axios","delete","then","result","console","log","data","splice","loadProducts","get","catch","response","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af6c7757.chunk.js","sourcesContent":["// TODO: put実装\n\nimport React from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport './FilterableProductTable.scss';\n\nfunction TopBar(props) {\n  const handleFilterTextChange = (e) => {\n    props.onFilterTextChange(e.target.value);\n  };\n  const handleInStockOnlyChange = (e) => {\n    props.onInStockOnlyChange(e.target.checked);\n  };\n\n  return (\n    <form className=\"top-bar\">\n      <input\n        type=\"text\"\n        placeholder=\"Search name...\"\n        value={props.filterText}\n        onChange={handleFilterTextChange}\n      />\n      <input\n        id=\"checkInStockOnly\"\n        type=\"checkbox\"\n        checked={props.inStockOnly}\n        onChange={handleInStockOnlyChange}\n      />{' '}\n      <label htmlFor=\"checkInStockOnly\">Only show products in stock</label>\n    </form>\n  );\n}\n\nfunction ProductTable(props) {\n  const handleDeleteClick = (e) => {\n    props.onDeleteClick(\n      e.currentTarget.dataset.id,\n      e.currentTarget.dataset.index\n    );\n  };\n\n  /**\n   * @param {Array} product\n   */\n  const isFilterTextValid = (product) => {\n    const capsName = product.name.toUpperCase();\n    const capsFilterText = props.filterText.toUpperCase();\n    return capsName.indexOf(capsFilterText) !== -1;\n  };\n\n  /**\n   * @param {Array} product\n   */\n  const isInStockOnlyValid = (product) => {\n    return props.inStockOnly ? product.stocked : !undefined;\n  };\n\n  return (\n    <table className=\"product-table\">\n      <thead>\n        <tr className=\"table-row\">\n          <th className=\"table-cell text-center\"></th>\n          <th className=\"table-cell text-right\">ID</th>\n          <th className=\"table-cell text-left\">Brand</th>\n          <th className=\"table-cell text-left\">Category</th>\n          <th className=\"table-cell text-left\">Name</th>\n          <th className=\"table-cell text-right\">Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.products\n          .filter(isFilterTextValid)\n          .filter(isInStockOnlyValid)\n          .map((product, index) => (\n            <tr\n              key={product.id}\n              className={classNames('table-row', { warn: !product.stocked })}\n            >\n              <td className=\"table-cell text-center\">\n                <button\n                  data-id={product.id}\n                  data-index={index}\n                  onClick={handleDeleteClick}\n                >\n                  &times;\n                </button>\n              </td>\n              <td className=\"table-cell text-right\">{product.id}</td>\n              <td className=\"table-cell text-left\">{product.brand}</td>\n              <td className=\"table-cell text-left\">{product.category}</td>\n              <td className=\"table-cell text-left\">{product.name}</td>\n              <td className=\"table-cell text-right\">{product.price}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nclass FilterableProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      products: [],\n      filterText: '',\n      inStockOnly: false,\n    };\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockOnlyChange = this.handleInStockOnlyChange.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.url = 'https://5e6736691937020016fed762.mockapi.io/products';\n  }\n\n  /**\n   * @param {String} filterText\n   */\n  handleFilterTextChange(filterText) {\n    this.setState({ filterText: filterText });\n  }\n\n  /**\n   * @param {Boolean} inStockOnly\n   */\n  handleInStockOnlyChange(inStockOnly) {\n    this.setState({ inStockOnly: inStockOnly });\n  }\n\n  /**\n   * @param {String} targetId\n   * @param {Number} targetIndex\n   */\n  handleDeleteClick(targetId, targetIndex) {\n    axios.delete(`${this.url}/${targetId}`).then((result) => {\n      console.log(`Deleted: id = ${result.data.id}`);\n      this.state.products.splice(targetIndex, 1);\n      this.setState({ products: this.state.products });\n    });\n  }\n\n  componentDidMount() {\n    this.loadProducts(this.url);\n  }\n\n  loadProducts(url) {\n    axios\n      .get(url)\n      .then((result) => {\n        this.setState({ isLoaded: true, products: result.data });\n      })\n      .catch((result) => {\n        this.setState({ isLoaded: true, error: 'Error!' });\n        console.log({ ...result.response });\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <TopBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={this.handleFilterTextChange}\n          onInStockOnlyChange={this.handleInStockOnlyChange}\n        />\n        {this.state.error ? (\n          <div>Error!</div>\n        ) : !this.state.isLoaded ? (\n          <div>Loading...</div>\n        ) : (\n          <ProductTable\n            filterText={this.state.filterText}\n            inStockOnly={this.state.inStockOnly}\n            products={this.state.products}\n            onDeleteClick={this.handleDeleteClick}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default FilterableProductTable;\n","import React from 'react'\nimport './Reset.scss'\nimport './App.scss'\nimport FilterableProductTable from './components/FilterableProductTable'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FilterableProductTable />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
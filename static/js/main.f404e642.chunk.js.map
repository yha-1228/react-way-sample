{"version":3,"sources":["components/FilterableProductTable.js","App.js","index.js"],"names":["TopBar","props","className","type","placeholder","value","filterText","onChange","e","onFilterTextChange","target","id","checked","inStockOnly","onInStockOnlyChange","htmlFor","ProductTable","handleDeleteClick","onDeleteClick","currentTarget","dataset","products","filter","product","capsName","name","toUpperCase","capsFilterText","indexOf","stocked","map","key","classNames","warn","data-id","onClick","brand","category","price","FilterableProductTable","state","error","isLoaded","handleFilterTextChange","bind","handleInStockOnlyChange","url","this","setState","targetId","axios","delete","then","result","alert","data","componentDidMount","loadProducts","get","catch","console","log","response","ProductTableView","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"8WAOA,SAASA,EAAOC,GAQd,OACE,0BAAMC,UAAU,WACd,2BACEC,KAAK,OACLC,YAAY,iBACZC,MAAOJ,EAAMK,WACbC,SAbyB,SAAAC,GAC7BP,EAAMQ,mBAAmBD,EAAEE,OAAOL,UAchC,2BACEM,GAAG,mBACHR,KAAK,WACLS,QAASX,EAAMY,YACfN,SAhB0B,SAAAC,GAC9BP,EAAMa,oBAAoBN,EAAEE,OAAOE,YAgB9B,IACH,2BAAOG,QAAQ,oBAAf,gCAKN,SAASC,EAAaf,GACpB,IAAMgB,EAAoB,SAAAT,GACxBP,EAAMiB,cAAcV,EAAEW,cAAcC,QAAQT,KAmB9C,OACE,2BAAOT,UAAU,iBACf,+BACE,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,2BACd,wBAAIA,UAAU,yBAAd,MACA,wBAAIA,UAAU,wBAAd,SACA,wBAAIA,UAAU,wBAAd,YACA,wBAAIA,UAAU,wBAAd,QACA,wBAAIA,UAAU,yBAAd,WAGJ,+BACGD,EAAMoB,SACJC,QA3BiB,SAAAC,GACxB,IAAMC,EAAWD,EAAQE,KAAKC,cACxBC,EAAiB1B,EAAMK,WAAWoB,cACxC,OAA6C,IAAtCF,EAASI,QAAQD,MAyBjBL,QAnBkB,SAAAC,GACzB,OAAOtB,EAAMY,aAAcU,EAAQM,WAmB5BC,KAAI,SAAAP,GAAO,OACV,wBACEQ,IAAKR,EAAQZ,GACbT,UAAW8B,IAAW,YAAa,CAAEC,MAAOV,EAAQM,WAEpD,wBAAI3B,UAAU,0BACZ,4BAAQgC,UAASX,EAAQZ,GAAIwB,QAASlB,GAAtC,WAIF,wBAAIf,UAAU,yBAAyBqB,EAAQZ,IAC/C,wBAAIT,UAAU,wBAAwBqB,EAAQa,OAC9C,wBAAIlC,UAAU,wBAAwBqB,EAAQc,UAC9C,wBAAInC,UAAU,wBAAwBqB,EAAQE,MAC9C,wBAAIvB,UAAU,yBAAyBqB,EAAQe,a,IA4F9CC,E,kDAnFb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDuC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVrB,SAAU,GACVf,WAAY,GACZO,aAAa,GAEf,EAAK8B,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAC/B,EAAK3B,kBAAoB,EAAKA,kBAAkB2B,KAAvB,gBACzB,EAAKE,IAAM,uDAZM,E,mEAkBIxC,GACrByC,KAAKC,SAAS,CAAE1C,WAAYA,M,8CAMNO,GACtBkC,KAAKC,SAAS,CAAEnC,YAAaA,M,wCAMboC,GAAW,IAAD,OAC1BC,IAAMC,OAAN,UAAgBJ,KAAKD,IAArB,YAA4BG,IAAYG,MAAK,SAAAC,GAC3CC,MAAM,gBAAD,OAAiBD,EAAOE,KAAK5C,GAA7B,YACL,EAAK6C,yB,0CAKPT,KAAKU,aAAaV,KAAKD,O,mCAGZA,GAAM,IAAD,OAChBI,IACGQ,IAAIZ,GACJM,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAAEN,UAAU,EAAMrB,SAAUgC,EAAOE,UAElDI,OAAM,SAAAN,GACL,EAAKL,SAAS,CAAEN,UAAU,EAAMD,MAAO,WACvCmB,QAAQC,IAAR,eAAiBR,EAAOS,gB,+BAK5B,IAAMC,EAAmBhB,KAAKP,MAAMC,MAClC,uCACGM,KAAKP,MAAME,SAGd,kBAAC1B,EAAD,CACEV,WAAYyC,KAAKP,MAAMlC,WACvBO,YAAakC,KAAKP,MAAM3B,YACxBQ,SAAU0B,KAAKP,MAAMnB,SACrBH,cAAe6B,KAAK9B,oBANtB,2CAUF,OACE,oCACE,kBAACjB,EAAD,CACEM,WAAYyC,KAAKP,MAAMlC,WACvBO,YAAakC,KAAKP,MAAM3B,YACxBJ,mBAAoBsC,KAAKJ,uBACzB7B,oBAAqBiC,KAAKF,0BAE3BkB,O,GA9E4BC,IAAMC,WChF5BC,MARf,WACE,OACE,yBAAKhE,UAAU,aACb,kBAAC,EAAD,QCJNiE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f404e642.chunk.js","sourcesContent":["// TODO: put実装\n\nimport React from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport './FilterableProductTable.scss';\n\nfunction TopBar(props) {\n  const handleFilterTextChange = e => {\n    props.onFilterTextChange(e.target.value);\n  };\n  const handleInStockOnlyChange = e => {\n    props.onInStockOnlyChange(e.target.checked);\n  };\n\n  return (\n    <form className=\"top-bar\">\n      <input\n        type=\"text\"\n        placeholder=\"Search name...\"\n        value={props.filterText}\n        onChange={handleFilterTextChange}\n      />\n      <input\n        id=\"checkInStockOnly\"\n        type=\"checkbox\"\n        checked={props.inStockOnly}\n        onChange={handleInStockOnlyChange}\n      />{' '}\n      <label htmlFor=\"checkInStockOnly\">Only show products in stock</label>\n    </form>\n  );\n}\n\nfunction ProductTable(props) {\n  const handleDeleteClick = e => {\n    props.onDeleteClick(e.currentTarget.dataset.id);\n  };\n\n  /**\n   * @param {Array} product\n   */\n  const isFilterTextValid = product => {\n    const capsName = product.name.toUpperCase();\n    const capsFilterText = props.filterText.toUpperCase();\n    return capsName.indexOf(capsFilterText) !== -1;\n  };\n\n  /**\n   * @param {Array} product\n   */\n  const isInStockOnlyValid = product => {\n    return props.inStockOnly ? product.stocked : !undefined;\n  };\n\n  return (\n    <table className=\"product-table\">\n      <thead>\n        <tr className=\"table-row\">\n          <th className=\"table-cell text-center\"></th>\n          <th className=\"table-cell text-right\">ID</th>\n          <th className=\"table-cell text-left\">Brand</th>\n          <th className=\"table-cell text-left\">Category</th>\n          <th className=\"table-cell text-left\">Name</th>\n          <th className=\"table-cell text-right\">Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.products\n          .filter(isFilterTextValid)\n          .filter(isInStockOnlyValid)\n          .map(product => (\n            <tr\n              key={product.id}\n              className={classNames('table-row', { warn: !product.stocked })}\n            >\n              <td className=\"table-cell text-center\">\n                <button data-id={product.id} onClick={handleDeleteClick}>\n                  DELETE\n                </button>\n              </td>\n              <td className=\"table-cell text-right\">{product.id}</td>\n              <td className=\"table-cell text-left\">{product.brand}</td>\n              <td className=\"table-cell text-left\">{product.category}</td>\n              <td className=\"table-cell text-left\">{product.name}</td>\n              <td className=\"table-cell text-right\">{product.price}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nclass FilterableProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      products: [],\n      filterText: '',\n      inStockOnly: false,\n    };\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockOnlyChange = this.handleInStockOnlyChange.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.url = 'https://5e6736691937020016fed762.mockapi.io/products';\n  }\n\n  /**\n   * @param {String} filterText\n   */\n  handleFilterTextChange(filterText) {\n    this.setState({ filterText: filterText });\n  }\n\n  /**\n   * @param {Boolean} inStockOnly\n   */\n  handleInStockOnlyChange(inStockOnly) {\n    this.setState({ inStockOnly: inStockOnly });\n  }\n\n  /**\n   * @param {String} targetId\n   */\n  handleDeleteClick(targetId) {\n    axios.delete(`${this.url}/${targetId}`).then(result => {\n      alert(`Deleted [id: ${result.data.id}] data.`);\n      this.componentDidMount();\n    });\n  }\n\n  componentDidMount() {\n    this.loadProducts(this.url);\n  }\n\n  loadProducts(url) {\n    axios\n      .get(url)\n      .then(result => {\n        this.setState({ isLoaded: true, products: result.data });\n      })\n      .catch(result => {\n        this.setState({ isLoaded: true, error: 'Error!' });\n        console.log({ ...result.response });\n      });\n  }\n\n  render() {\n    const ProductTableView = this.state.error ? (\n      <div>Error!</div>\n    ) : !this.state.isLoaded ? (\n      <div>Loading...</div>\n    ) : (\n      <ProductTable\n        filterText={this.state.filterText}\n        inStockOnly={this.state.inStockOnly}\n        products={this.state.products}\n        onDeleteClick={this.handleDeleteClick}\n      />\n    );\n\n    return (\n      <>\n        <TopBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={this.handleFilterTextChange}\n          onInStockOnlyChange={this.handleInStockOnlyChange}\n        />\n        {ProductTableView}\n      </>\n    );\n  }\n}\n\nexport default FilterableProductTable;\n","import React from 'react'\nimport './Reset.scss'\nimport './App.scss'\nimport FilterableProductTable from './components/FilterableProductTable'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FilterableProductTable />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","index.js"],"names":["SearchBar","props","type","placeholder","value","filterText","onChange","e","onFilterTextChange","target","id","checked","inStockOnly","onInStockOnlyChange","htmlFor","ProductTable","className","products","filter","product","capsName","name","toUpperCase","capsFilterText","indexOf","stocked","map","key","classNames","warn","brand","category","price","FilterableProductTable","state","handleFilterTextChange","bind","handleInStockOnlyChange","this","setState","Axios","get","then","response","data","catch","console","log","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0UAMA,SAASA,EAAUC,GAQjB,OACE,8BACE,2BACEC,KAAK,OACLC,YAAY,iBACZC,MAAOH,EAAMI,WACbC,SAbyB,SAACC,GAC9BN,EAAMO,mBAAmBD,EAAEE,OAAOL,UAchC,2BACE,2BACEM,GAAG,mBACHR,KAAK,WACLS,QAASV,EAAMW,YACfN,SAjBwB,SAACC,GAC/BN,EAAMY,oBAAoBN,EAAEE,OAAOE,YAiB5B,IACH,2BAAOG,QAAQ,oBAAf,iCAMR,SAASC,EAAad,GAiBpB,OACE,2BAAOe,UAAU,iBACf,+BACE,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,yBAAd,MACA,wBAAIA,UAAU,wBAAd,SACA,wBAAIA,UAAU,wBAAd,YACA,wBAAIA,UAAU,wBAAd,QACA,wBAAIA,UAAU,yBAAd,WAGJ,+BACGf,EAAMgB,SACJC,QA1BiB,SAACC,GACzB,IAAMC,EAAWD,EAAQE,KAAKC,cACxBC,EAAiBtB,EAAMI,WAAWiB,cACxC,OAA6C,IAAtCF,EAASI,QAAQD,MAwBjBL,QAlBkB,SAACC,GAC1B,OAAOlB,EAAMW,aAAcO,EAAQM,WAkB5BC,KAAI,SAACP,GAAD,OACH,wBACEQ,IAAKR,EAAQT,GACbM,UAAWY,IAAW,YAAa,CAAEC,MAAOV,EAAQM,WAEpD,wBAAIT,UAAU,yBAAyBG,EAAQT,IAC/C,wBAAIM,UAAU,wBAAwBG,EAAQW,OAC9C,wBAAId,UAAU,wBAAwBG,EAAQY,UAC9C,wBAAIf,UAAU,wBAAwBG,EAAQE,MAC9C,wBAAIL,UAAU,yBAAyBG,EAAQa,a,IAQvDC,E,kDAGJ,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDiC,MAAQ,CAAEjB,SAAU,GAAIZ,WAAY,GAAIO,aAAa,GAC1D,EAAKuB,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAJd,E,mEAUI/B,GACrBiC,KAAKC,SAAS,CAAElC,WAAYA,M,8CAMNO,GACtB0B,KAAKC,SAAS,CAAE3B,YAAaA,M,0CAGV,IAAD,OAClB4B,IAAMC,IAAI,wDACPC,MAAK,SAACC,GACL,EAAKJ,SAAS,CAAEtB,SAAU0B,EAASC,UAEpCC,OAAM,SAACF,GACNG,QAAQC,IAAR,sBAA2BJ,S,+BAK/B,OACE,6BACE,kBAAC3C,EAAD,CACEK,WAAYiC,KAAKJ,MAAM7B,WACvBO,YAAa0B,KAAKJ,MAAMtB,YACxBJ,mBAAoB8B,KAAKH,uBACzBtB,oBAAqByB,KAAKD,0BAE5B,kBAACtB,EAAD,CACEV,WAAYiC,KAAKJ,MAAM7B,WACvBO,YAAa0B,KAAKJ,MAAMtB,YACxBK,SAAUqB,KAAKJ,MAAMjB,gB,GA9CM+B,IAAMC,WA6D5BC,MARf,WACE,OACE,yBAAKlC,UAAU,aACb,kBAAC,EAAD,QCxINmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.844be027.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport classNames from 'classnames';\nimport './Reset.scss';\nimport './App.scss';\n\nfunction SearchBar(props) {\n  const handleFilterTextChange = (e) => {\n    props.onFilterTextChange(e.target.value);\n  };\n  const handleInStockOnlyChange = (e) => {\n    props.onInStockOnlyChange(e.target.checked);\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        placeholder=\"Search name...\"\n        value={props.filterText}\n        onChange={handleFilterTextChange}\n      />\n      <p>\n        <input\n          id=\"checkInStockOnly\"\n          type=\"checkbox\"\n          checked={props.inStockOnly}\n          onChange={handleInStockOnlyChange}\n        />{' '}\n        <label htmlFor=\"checkInStockOnly\">Only show products in stock</label>\n      </p>\n    </form>\n  );\n}\n\nfunction ProductTable(props) {\n  /**\n   * @param {Array} product\n   */\n  const isFilterTextValid = (product) => {\n    const capsName = product.name.toUpperCase();\n    const capsFilterText = props.filterText.toUpperCase();\n    return capsName.indexOf(capsFilterText) !== -1;\n  };\n\n  /**\n   * @param {Array} product\n   */\n  const isInStockOnlyValid = (product) => {\n    return props.inStockOnly ? product.stocked : !undefined;\n  };\n\n  return (\n    <table className=\"product-table\">\n      <thead>\n        <tr className=\"table-row\">\n          <th className=\"table-cell text-right\">ID</th>\n          <th className=\"table-cell text-left\">Brand</th>\n          <th className=\"table-cell text-left\">Category</th>\n          <th className=\"table-cell text-left\">Name</th>\n          <th className=\"table-cell text-right\">Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.products\n          .filter(isFilterTextValid)\n          .filter(isInStockOnlyValid)\n          .map((product) => (\n            <tr\n              key={product.id}\n              className={classNames('table-row', { warn: !product.stocked })}\n            >\n              <td className=\"table-cell text-right\">{product.id}</td>\n              <td className=\"table-cell text-left\">{product.brand}</td>\n              <td className=\"table-cell text-left\">{product.category}</td>\n              <td className=\"table-cell text-left\">{product.name}</td>\n              <td className=\"table-cell text-right\">{product.price}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nclass FilterableProductTable extends React.Component {\n  // TODO: add loading\n  // TODO: add error\n  constructor(props) {\n    super(props);\n    this.state = { products: [], filterText: '', inStockOnly: false };\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockOnlyChange = this.handleInStockOnlyChange.bind(this);\n  }\n\n  /**\n   * @param {String} filterText\n   */\n  handleFilterTextChange(filterText) {\n    this.setState({ filterText: filterText });\n  }\n\n  /**\n   * @param {Boolean} inStockOnly\n   */\n  handleInStockOnlyChange(inStockOnly) {\n    this.setState({ inStockOnly: inStockOnly });\n  }\n\n  componentDidMount() {\n    Axios.get('https://5e6736691937020016fed762.mockapi.io/products')\n      .then((response) => {\n        this.setState({ products: response.data });\n      })\n      .catch((response) => {\n        console.log(`responce => ${response}`);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={this.handleFilterTextChange}\n          onInStockOnlyChange={this.handleInStockOnlyChange}\n        />\n        <ProductTable\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          products={this.state.products}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FilterableProductTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","index.js"],"names":["SearchBar","props","type","placeholder","value","filterText","onChange","e","onFilterTextChange","target","id","checked","inStockOnly","onInStockOnlyChange","htmlFor","ProductTable","className","products","filter","product","capsName","name","toUpperCase","capsFilterText","indexOf","stocked","map","key","classNames","warn","brand","category","price","FilterableProductTable","state","Axios","get","then","response","setState","data","catch","console","log","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mUAMA,SAASA,EAAUC,GACjB,OACE,8BACE,2BACEC,KAAK,OACLC,YAAY,iBACZC,MAAOH,EAAMI,WACbC,SAAU,SAACC,GACTN,EAAMO,mBAAmBD,EAAEE,OAAOL,UAGtC,2BACE,2BACEM,GAAG,mBACHR,KAAK,WACLS,QAASV,EAAMW,YACfN,SAAU,SAACC,GACTN,EAAMY,oBAAoBN,EAAEE,OAAOE,YAEpC,IACH,2BAAOG,QAAQ,oBAAf,iCAMR,SAASC,EAAad,GAiBpB,OACE,+BACE,+BACE,wBAAIe,UAAU,aACZ,wBAAIA,UAAU,cAAd,MACA,wBAAIA,UAAU,cAAd,SACA,wBAAIA,UAAU,cAAd,YACA,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,WAGJ,+BACGf,EAAMgB,SACJC,QA1BiB,SAACC,GACzB,IAAMC,EAAWD,EAAQE,KAAKC,cACxBC,EAAiBtB,EAAMI,WAAWiB,cACxC,OAA6C,IAAtCF,EAASI,QAAQD,MAwBjBL,QAlBkB,SAACC,GAC1B,OAAOlB,EAAMW,aAAcO,EAAQM,WAkB5BC,KAAI,SAACP,GAAD,OACH,wBACEQ,IAAKR,EAAQT,GACbM,UAAWY,IAAW,YAAa,CAAEC,MAAOV,EAAQM,WAEpD,wBAAIT,UAAU,cAAcG,EAAQT,IACpC,wBAAIM,UAAU,cAAcG,EAAQW,OACpC,wBAAId,UAAU,cAAcG,EAAQY,UACpC,wBAAIf,UAAU,cAAcG,EAAQE,MACpC,wBAAIL,UAAU,cAAcG,EAAQa,a,IAQ5CC,E,kDAGJ,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDiC,MAAQ,CAAEjB,SAAU,GAAIZ,WAAY,GAAIO,aAAa,GAFzC,E,gEAKE,IAAD,OAClBuB,IAAMC,IAAI,wDACPC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEtB,SAAUqB,EAASE,UAEpCC,OAAM,SAACH,GACNI,QAAQC,IAAR,sBAA2BL,S,+BAIvB,IAAD,OACP,OACE,6BACE,kBAACtC,EAAD,CACEK,WAAYuC,KAAKV,MAAM7B,WACvBO,YAAagC,KAAKV,MAAMtB,YACxBJ,mBAAoB,SAACH,GACnB,EAAKkC,SAAS,CAAElC,WAAYA,KAE9BQ,oBAAqB,SAACD,GACpB,EAAK2B,SAAS,CAAE3B,YAAaA,OAGjC,kBAACG,EAAD,CACEV,WAAYuC,KAAKV,MAAM7B,WACvBO,YAAagC,KAAKV,MAAMtB,YACxBK,SAAU2B,KAAKV,MAAMjB,gB,GAlCM4B,IAAMC,WAiD5BC,MARf,WACE,OACE,yBAAK/B,UAAU,aACb,kBAAC,EAAD,QCzHNgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cedf839c.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport classNames from 'classnames';\nimport './Reset.scss';\nimport './App.scss';\n\nfunction SearchBar(props) {\n  return (\n    <form>\n      <input\n        type=\"text\"\n        placeholder=\"Search name...\"\n        value={props.filterText}\n        onChange={(e) => {\n          props.onFilterTextChange(e.target.value);\n        }}\n      />\n      <p>\n        <input\n          id=\"checkInStockOnly\"\n          type=\"checkbox\"\n          checked={props.inStockOnly}\n          onChange={(e) => {\n            props.onInStockOnlyChange(e.target.checked);\n          }}\n        />{' '}\n        <label htmlFor=\"checkInStockOnly\">Only show products in stock</label>\n      </p>\n    </form>\n  );\n}\n\nfunction ProductTable(props) {\n  /**\n   * @param {Array} product \n   */\n  const isFilterTextValid = (product) => {\n    const capsName = product.name.toUpperCase();\n    const capsFilterText = props.filterText.toUpperCase();\n    return capsName.indexOf(capsFilterText) !== -1;\n  };\n\n  /**\n   * @param {Array} product \n   */\n  const isInStockOnlyValid = (product) => {\n    return props.inStockOnly ? product.stocked : !undefined;\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr className=\"table-row\">\n          <th className=\"table-cell\">ID</th>\n          <th className=\"table-cell\">Brand</th>\n          <th className=\"table-cell\">Category</th>\n          <th className=\"table-cell\">Name</th>\n          <th className=\"table-cell\">Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.products\n          .filter(isFilterTextValid)\n          .filter(isInStockOnlyValid)\n          .map((product) => (\n            <tr\n              key={product.id}\n              className={classNames('table-row', { warn: !product.stocked })}\n            >\n              <td className=\"table-cell\">{product.id}</td>\n              <td className=\"table-cell\">{product.brand}</td>\n              <td className=\"table-cell\">{product.category}</td>\n              <td className=\"table-cell\">{product.name}</td>\n              <td className=\"table-cell\">{product.price}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nclass FilterableProductTable extends React.Component {\n  // TODO: add loading\n  // TODO: add error\n  constructor(props) {\n    super(props);\n    this.state = { products: [], filterText: '', inStockOnly: false };\n  }\n\n  componentDidMount() {\n    Axios.get('https://5e6736691937020016fed762.mockapi.io/products')\n      .then((response) => {\n        this.setState({ products: response.data });\n      })\n      .catch((response) => {\n        console.log(`responce => ${response}`);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={(filterText) => {\n            this.setState({ filterText: filterText });\n          }}\n          onInStockOnlyChange={(inStockOnly) => {\n            this.setState({ inStockOnly: inStockOnly });\n          }}\n        />\n        <ProductTable\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          products={this.state.products}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FilterableProductTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}